# Deploy to AWS Elastic Beanstalk
name: Deploy AWS_EB

on:
  workflow_run:
    workflows: [ "Build" ]
    types:
      - completed

env:
  AWS_REGION: sa-east-1
  ZIP_FILE: deploy.zip
  ARTIFACT_PATH: artifact/cep-acl/
  ARTIFACT_FULL_PATH: artifact/cep-acl/deploy.zip
  VERSION_LABEL: ${{ github.sha }}
  ELASTIC_BEANSTALK_NAME: DesafioCep
  ELASTIC_BEANSTALK_ENV_NAME: DesafioCep-env
  ELASTIC_BEANSTALK: elasticbeanstalk-sa-east-1-${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy-aws-eb:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'aws' }}

    steps:
      - name: Download do artefato
        uses: actions/download-artifact@v4
        with:
          name: deploy
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Verifica artefato baixado
        run: tree ${{ env.ZIP_FILE }}

      - name: Configura credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload do artefato para o Artifact no S3
        run: |
          aws s3 cp "${{ env.ARTIFACT_FILE }}" s3://${{ env.ELASTIC_BEANSTALK }}/${{ env.ARTIFACT_PATH }}

      - name: Criar uma nova vers√£o
        run: >
          aws elasticbeanstalk create-application-version
          --application-name ${{ env.ELASTIC_BEANSTALK_NAME }}
          --source-bundle S3Bucket="${{ env.ELASTIC_BEANSTALK }}",S3Key="${{ env.ARTIFACT_FULL_PATH }}"
          --version-label ${{ env.VERSION_LABEL }}

      - name: Implantar a nova vers√£o
        run: >
          aws elasticbeanstalk update-environment
          --application-name ${{ env.ELASTIC_BEANSTALK_NAME }}
          --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }}
          --version-label ${{ env.VERSION_LABEL }}

      - name: Aguardar a implanta√ß√£o
        run: >
          aws elasticbeanstalk wait environment-updated
          --application-name ${{ env.ELASTIC_BEANSTALK_NAME }}
          --environment-name ${{ env.ELASTIC_BEANSTALK_ENV_NAME }}

      - name: Deployment status
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "üöÄ Deploy successful!"
          else
            echo "‚ùå Deploy failed!"
            exit 1
          fi